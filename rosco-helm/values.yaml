bot:
  replicaCount: 1
  image:
    repository: docker.io/ryanpage/rosco
    tag: latest
    pullPolicy: Always
  service:
    name: rosco
    type: ClusterIP
  secretName: rosco
  env:
    - name: LOG_LEVEL
      value: debug

web:
  replicaCount: 3
  image:
    repository: docker.io/ryanpage/rosco-web
    tag: latest
    pullPolicy: Always
  service:
    name: rosco-web
    type: ClusterIP
    port: 80

ingress:
  enabled: true
  className: "nginx"
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - service:
        name: rosco-web
        port: 80
      paths:
        - path: /
          pathType: ImplementationSpecific

  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

ingress-nginx:
  controller:
    service:
      annotations:
        service.beta.kubernetes.io/do-loadbalancer-size-unit: "1"
        service.beta.kubernetes.io/do-loadbalancer-disable-lets-encrypt-dns-records: "false"

wiki:
  volumeMounts:
  - name: postgres-cert
    mountPath: /etc/rosco/ca-certificate.crt
    subPath: ca-certificate.crt
  postgres:
    ssl: true
    ca: /etc/rosco/ca-certificate.crt
    postgresqlUser: user
    postgresSqlHost: postgres
    existingSecret: wikijs
    existingSecretKey: password


serviceAccount:
  # Specifies whether helm should create a service account or not.
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

imagePullSecrets:
  - name: ryanpage-dockerhub

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

