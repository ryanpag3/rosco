apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.bot.service.name }}
  annotations:
    keel.sh/policy: {{ .Values.keel.globPattern }}
    keel.sh/pollSchedule: "@every 30s"
spec:
  selector:
    matchLabels:
     name: {{ .Values.bot.service.name }} 
  serviceName: {{ .Values.bot.service.name }}
  replicas: {{ .Values.bot.replicaCount }}
  template:
    metadata:
      labels:
        name: {{ .Values.bot.service.name }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      terminationGracePeriodSeconds: 10
      containers:
      - name: rosco
        image: "{{ .Values.bot.image.repository }}:{{ .Values.bot.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.bot.image.pullPolicy }}
        securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
        envFrom:
        - secretRef:
            name: {{ .Values.bot.secretName }}
        volumeMounts:
        - name: postgres-cert
          mountPath: /etc/rosco/ca-certificate.crt
          subPath: ca-certificate.crt
        env:
          {{- toYaml .Values.bot.env | nindent 10 }}
          - name: SHARD_COUNT
            value: {{ .Values.bot.replicaCount | quote }}
      volumes:
        - name: postgres-cert
          configMap:
            name: postgres-cert